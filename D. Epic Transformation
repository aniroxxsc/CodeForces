#include<iostream>
#include<queue>
#include<map>

using namespace std;

int solve(int arr[],int n){
    priority_queue<pair<int, int> > p;
    map<int,int> v;
    for(int i=0;i<n;i++){
        v[arr[i]]++;
    }
    for(auto [x, y]:v){
        p.push({y,x});
    }
    int sz=n;
    while(p.size()>=2){
        auto [cnt1, x1] = p.top();
        p.pop();
        auto [cnt2, x2] = p.top();
        p.pop();
        cnt1--;
        cnt2--;
        sz-=2;
        if(cnt1){
            p.push({cnt1, x1});
        }
        if(cnt2){
            p.push({cnt2, x2});
        }
    }
    return sz;
}

int main(){
    int t;
    cin>>t;
    while(t--){
        int n;
        cin>>n;
        int arr[n];
        for(int i=0;i<n;i++){
            cin>>arr[i];
        }
        cout<<solve(arr, n)<<endl;
    }
    return 0;
}
